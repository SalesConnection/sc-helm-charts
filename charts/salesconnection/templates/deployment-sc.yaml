apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "salesconnection.fullname" . }}
  labels:
    {{- include "salesconnection.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "salesconnection.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        configmap.reloader.stakater.com/reload: "laravel-env"
        ad.datadoghq.com/{{ .Chart.Name }}.logs: |
          [
            {"source":"container","service":"Laravel-log","type":"file","path":"/var/run/datadog/ddlog-prelive.log"}
          ]      
        {{- if .Values.podAnnotations }}
          {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        {{- include "salesconnection.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "salesconnection.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      # spec:
      initContainers:
        - name: {{ .Values.spec_initContainers_name }}
          image: {{ .Values.spec_initContainers_image }}
          command: ["/bin/sh", "-c"]
          args:
          - |
            {{ .Values.spec_initContainers_args1 }}
            {{ .Values.spec_initContainers_args2 }}
          volumeMounts:
            - name: {{ .Values.spec_initContainers_volumeMounts_name }}
              mountPath: {{ .Values.spec_initContainers_volumeMounts_mountPath }}
        - name: {{ .Values.spec_initContainers_name_robots }}
          image: {{ .Values.spec_initContainers_image_robots }}
          command: {{ .Values.spec_initContainers_command_robots }}
          volumeMounts:
            - name: {{ .Values.spec_initContainers_volumeMounts_name_robots }}
              mountPath: {{ .Values.spec_initContainers_volumeMounts_mountPath_robots }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
            # requests:
            #   memory:
            #   cpu:
            # limits:
            #   memory:
            #   cpu:

      volumes:
      {{- if .Values.datadog.enabled }}
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
#add dd-log prelive volume here
        - name: {{ .Values.volumes_ddlog_prelive_name }}
          hostPath:
            path: {{ .Values.volumes_ddlog_prelive_hostpath_path }}
        - name: {{ .Values.volumes_name_robots }}
          configmap:
            name: {{ .Values.volumes_hostpath_path_robots }}
      {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: fpm
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 25
          readinessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 25
          volumeMounts:
          {{- if .Values.datadog.enabled }}
            - name: apmsocketpath
              mountPath: /var/run/datadog
  #add dd-log prelive volumeMount here
            - name: ddlog-prelive
              mountPath: "/var/run/datadog/"
            
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.image.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: DD_TRACE_AGENT_URL
              value: 'unix:///var/run/datadog/apm.socket'
          {{- with .Values.image.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: php-fpm-prometheus-exporter
          image: hipages/php-fpm_exporter:2
          ports:
            - name: metrics
              containerPort: 9253
              protocol: TCP
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints}}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- else }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "topology.kubernetes.io/zone"
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              {{- include "salesconnection.selectorLabels" . | nindent 14 }}
          matchLabelKeys:
            - pod-template-hash
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
